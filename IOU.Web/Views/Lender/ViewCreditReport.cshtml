@model IOU.Web.Models.ViewModels.CreditReportViewModel

@{
    ViewData["Title"] = "Credit Report";
}

<div class="container">
    <div class="card shadow-lg mt-4">
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="mb-0">Credit Report</h2>
                <span class="badge bg-light text-dark fs-6">Generated: @Model.GeneratedDate.ToString("MMM dd, yyyy")</span>
            </div>
        </div>
        
        <div class="card-body">
            <!-- Student Info Section -->
            <div class="row mb-4">
                <div class="col-md-8">
                    <h4><i class="fas fa-user-graduate me-2"></i>@Model.StudentName</h4>
                </div>
                <div class="col-md-4 text-end">
                    <div class="credit-score-display">
                        <div class="score-value @GetScoreClass(Model.CreditScore)">
                            @Math.Round(Model.CreditScore)
                        </div>
                        <div class="score-label">Credit Score</div>
                        <div class="risk-category badge @GetRiskBadgeClass(Model.RiskCategory)">
                            @Model.RiskCategory Risk
                        </div>
                    </div>
                </div>
            </div>

            <!-- Summary Cards -->
            <div class="row mb-4">
                <div class="col-md-4 mb-3">
                    <div class="card h-100 border-primary">
                        <div class="card-body">
                            <h5 class="card-title text-primary">
                                <i class="fas fa-money-bill-wave me-2"></i>Debt Summary
                            </h5>
                            <div class="d-flex justify-content-between">
                                <span>Total Debts:</span>
                                <strong>@Model.ActiveDebts</strong>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span>Total Owed:</span>
                                <strong>@Model.TotalObligations.ToString("C")</strong>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span>Recommended Limit:</span>
                                <strong>@Model.RecommendedLimit.ToString("C")</strong>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4 mb-3">
                    <div class="card h-100 border-success">
                        <div class="card-body">
                            <h5 class="card-title text-success">
                                <i class="fas fa-calendar-check me-2"></i>Payment History
                            </h5>
                            <div class="d-flex justify-content-between">
                                <span>Completion Rate:</span>
                                <strong>@Math.Round(Model.PaymentCompletionRate)%</strong>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span>On-Time Payments:</span>
                                <strong>@Model.PaymentHistory.OnTimePayments / @Model.PaymentHistory.TotalPayments</strong>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span>Avg. Days Late:</span>
                                <strong>@Math.Round(Model.PaymentHistory.AverageDaysLate, 1)</strong>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4 mb-3">
                    <div class="card h-100 border-info">
                        <div class="card-body">
                            <h5 class="card-title text-info">
                                <i class="fas fa-exclamation-triangle me-2"></i>Risk Assessment
                            </h5>
                            <p class="card-text">@Model.RiskExplanation</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Debt Details Section -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">
                                <i class="fas fa-file-invoice-dollar me-2"></i>Active Debts
                            </h5>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table table-striped table-hover mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Type</th>
                                            <th>Principal</th>
                                            <th>Balance</th>
                                            <th>Interest Rate</th>
                                            <th>Due Date</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var debt in Model.Debts)
                                        {
                                            <tr>
                                                <td>@debt.DebtType</td>
                                                <td>@debt.PrincipalAmount.ToString("C")</td>
                                                <td>@debt.CurrentBalance.ToString("C")</td>
                                                <td>@debt.InterestRate.ToString("P1")</td>
                                                <td>@debt.DueDate.ToString("d")</td>
                                                <td><span class="badge @GetStatusBadgeClass(debt.Status)">@debt.Status</span></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Risk Factors Section -->
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">
                                <i class="fas fa-chart-line me-2"></i>Key Credit Factors
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="factor mb-3">
                                        <h6>Payment History</h6>
                                        <div class="progress">
                                            <div class="progress-bar bg-success" 
                                                 role="progressbar" 
                                                 style="width: @Model.PaymentCompletionRate%" 
                                                 aria-valuenow="@Model.PaymentCompletionRate" 
                                                 aria-valuemin="0" 
                                                 aria-valuemax="100">
                                            </div>
                                        </div>
                                        <small class="text-muted">@Model.PaymentCompletionRate.ToString("0")% on-time payments</small>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="factor mb-3">
                                        <h6>Credit Utilization</h6>
                                        <div class="progress">
                                            <div class="progress-bar @(Model.TotalObligations > Model.RecommendedLimit ? "bg-danger" : "bg-warning")" 
                                                 role="progressbar" 
                                                 style="width: @(Math.Min(100, Model.TotalObligations / Model.RecommendedLimit * 100))%" 
                                                 aria-valuenow="@(Model.TotalObligations / Model.RecommendedLimit * 100)" 
                                                 aria-valuemin="0" 
                                                 aria-valuemax="100">
                                            </div>
                                        </div>
                                        <small class="text-muted">@((Model.TotalObligations / Model.RecommendedLimit * 100).ToString("0"))% of recommended limit</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-footer text-muted text-center">
            <small>This report is confidential and intended only for authorized use.</small>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .credit-score-display {
            display: inline-block;
            text-align: center;
        }
        
        .score-value {
            font-size: 2.5rem;
            font-weight: 700;
            line-height: 1;
        }
        
        .score-label {
            font-size: 0.8rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-top: -5px;
        }
        
        .risk-category {
            font-size: 0.9rem;
            margin-top: 5px;
            display: block;
        }
        
        .factor .progress {
            height: 10px;
            margin-bottom: 5px;
        }
        
        /* Score color classes */
        .score-excellent { color: #28a745; }
        .score-good { color: #17a2b8; }
        .score-fair { color: #ffc107; }
        .score-poor { color: #dc3545; }
        
        /* Risk badge classes */
        .bg-low-risk { background-color: #28a745; }
        .bg-medium-risk { background-color: #ffc107; color: #212529; }
        .bg-high-risk { background-color: #dc3545; }
    </style>
}

@section Scripts {
    <script>
        // Any additional JavaScript can go here
        $(document).ready(function() {
            // Tooltips for better UX
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}

@functions {
    string GetScoreClass(decimal score)
    {
        return score switch
        {
            >= 800 => "score-excellent",
            >= 600 => "score-good",
            >= 400 => "score-fair",
            _ => "score-poor"
        };
    }
    
    string GetRiskBadgeClass(string riskCategory)
    {
        return riskCategory switch
        {
            "Low Risk" => "bg-low-risk",
            "Medium Risk" => "bg-medium-risk",
            "High Risk" => "bg-high-risk",
            _ => "bg-secondary"
        };
    }
    
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Active" => "bg-success",
            "Pending" => "bg-warning text-dark",
            "Defaulted" => "bg-danger",
            "Paid" => "bg-info",
            _ => "bg-secondary"
        };
    }
}